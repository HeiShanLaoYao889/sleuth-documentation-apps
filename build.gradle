buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE"
    }
}

allprojects {
    apply plugin: 'java'
}

configure(subprojects) {

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'spring-boot'

    ext {
        systemPropsFromGradle = {
            project.gradle.startParameter.systemPropertiesArgs.entrySet().collect{"-D${it.key}=${it.value}"}
        }
        buildNrLoc = project.hasProperty('buildNr') ? "${buildNr}" : "1.0.0"
    }

    group = 'io.spring.cloud.sleuth.docs'
    version = buildNrLoc

    sourceCompatibility = '1.8'

    configurations {
        all {
            resolutionStrategy {
                eachDependency { DependencyResolveDetails details ->
                    // To prevent an accidental usage of groovy-all.jar and groovy.jar in different versions
                    // all modularized Groovy jars are replaced with groovy-all.jar by default.
                    if (details.requested.group == 'org.codehaus.groovy' && details.requested.name != "groovy-all") {
                        details.useTarget("org.codehaus.groovy:groovy-all:${details.requested.version}")
                    }
                }
            }
        }
    }

    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "http://repo.spring.io/snapshot"
        }
        maven {
            url "http://repo.spring.io/milestone"
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-starter-parent:$BOM_VERSION"
        }
    }
}

configure(subprojects) {

    dependencies {
        compile "org.springframework.boot:spring-boot-starter-web"
        compile "org.springframework:spring-web"
        compile 'org.apache.tomcat.embed:tomcat-embed-core:8.0.23'
        compile "org.springframework.cloud:spring-cloud-starter-hystrix"
        compile "org.springframework.cloud:spring-cloud-starter-zipkin"
        compile "org.springframework.boot:spring-boot-starter-actuator"
        compile "org.springframework:spring-context-support"
        compile 'com.fasterxml.jackson.core:jackson-databind'
        compile "org.codehaus.jackson:jackson-mapper-asl:$jacksonMapper"
        compile "org.codehaus.jackson:jackson-core-asl:$jacksonMapper"
        compile "org.aspectj:aspectjrt"

        runtime 'cglib:cglib-nodep:3.1'
        runtime 'org.objenesis:objenesis:2.2'
        runtime 'org.aspectj:aspectjweaver'
    }

    wrapper {
        gradleVersion '2.11'
    }

    bootRun {
        jvmArgs = systemPropsFromGradle()
    }

}
